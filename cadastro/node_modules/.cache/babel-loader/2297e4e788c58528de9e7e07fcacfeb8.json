{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anderson Lomba\\\\formulario-cadastro\\\\cadastro\\\\src\\\\App.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { Router } from './router';\nimport { FormProvider } from './contexts/FormContext';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [user, setUser] = useState({\n    name: '',\n    level: '',\n    email: '',\n    github: ''\n  });\n  const [status, setStatus] = useState({\n    type: '',\n    mensagem: ''\n  }); //Receber os dados do formulário\n\n  const valueInput = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  }); //Enviar os dados para o back-end\n\n\n  const addUser = async e => {\n    e.preventDefault();\n    if (!validate()) return;\n    const saveDataForm = true;\n\n    if (saveDataForm) {\n      setStatus({\n        type: 'success',\n        mensagem: \"Estagiário cadastrado com sucesso!\"\n      });\n      setUser({\n        name: '',\n        level: '',\n        email: '',\n        github: ''\n      });\n    } else {\n      setStatus({\n        type: 'error',\n        mensagem: \"Erro: Estagiário não cadastrado com sucesso!\"\n      });\n    }\n  };\n\n  function validate() {\n    if (!user.name) return setStatus({\n      type: 'error',\n      mensagem: 'Erro: Necessário preencher o campo nome!'\n    });\n    if (!user.level) return setStatus({\n      type: 'error',\n      mensagem: 'Erro: Necessário preencher o campo nível!'\n    });\n    if (!user.email) return setStatus({\n      type: 'error',\n      mensagem: 'Erro: Necessário preencher o campo e-mail!'\n    });\n    if (!user.github) return setStatus({\n      type: 'error',\n      mensagem: 'Erro: Necessário preencher o campo finalização do cadastro!'\n    });\n    return true;\n  }\n\n  const App = () => {\n    _s();\n\n    const [posts, setPosts] = useState([]);\n    useEffect(() => {\n      axios.get(\"http://localhost:3000/usuario/listar\").then(response => {\n        setPosts(response.data.posts);\n      }).catch(() => {\n        console.log(\"Falha!\");\n      });\n    }, []);\n    return /*#__PURE__*/_jsxDEV(FormProvider, {\n      children: [posts.map((post, key) => {}), /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this);\n  };\n\n  _s(App, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n}\n\n_s2(App, \"jCtGmJP1Ot/86iZzWtv7L9FBB40=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Anderson Lomba/formulario-cadastro/cadastro/src/App.tsx"],"names":["Router","FormProvider","React","useEffect","useState","axios","App","user","setUser","name","level","email","github","status","setStatus","type","mensagem","valueInput","e","target","value","addUser","preventDefault","validate","saveDataForm","posts","setPosts","get","then","response","data","catch","console","log","map","post","key"],"mappings":"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","sourcesContent":["import { Router } from './router';\nimport { FormProvider } from './contexts/FormContext';\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\n\nfunction App() {\n\n  const [user, setUser] = useState({\n    name: '',\n    level:'',\n    email: '',\n    github: ''\n  });\n\n  const [status, setStatus] = useState({\n    type: '',\n    mensagem: ''\n  });\n\n  //Receber os dados do formulário\n  const valueInput = (e: { target: { name: any; value: any; }; }) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  //Enviar os dados para o back-end\n  const addUser = async (e: { preventDefault: () => void; }) => {\n    e.preventDefault();\n\n    if(!validate()) return;\n\n    const saveDataForm = true;\n\n    if (saveDataForm) {\n      setStatus({\n        type: 'success',\n        mensagem: \"Estagiário cadastrado com sucesso!\"\n      });\n      setUser({\n        name: '',\n        level:'',\n        email: '',\n        github: ''\n      });\n    } else {\n      setStatus({\n        type: 'error',\n        mensagem: \"Erro: Estagiário não cadastrado com sucesso!\"\n      });\n    }\n  }\n\n  function validate(){\n    if(!user.name) return setStatus({type: 'error', mensagem: 'Erro: Necessário preencher o campo nome!'});\n    if(!user.level) return setStatus({type: 'error', mensagem: 'Erro: Necessário preencher o campo nível!'});\n    if(!user.email) return setStatus({type: 'error', mensagem: 'Erro: Necessário preencher o campo e-mail!'});\n    if(!user.github) return setStatus({type: 'error', mensagem: 'Erro: Necessário preencher o campo finalização do cadastro!'});\n    \n    return true;\n  }\n\nconst App = () => {\n\n  const [posts, setPosts] = useState([])\n\n  useEffect(() =>{\n       axios.get(\"http://localhost:3000/usuario/listar\")\n       .then((response) => {\n          setPosts(response.data.posts)\n       }).catch(() =>{\n          console.log(\"Falha!\")\n       })\n  }, [])\n\n\n  return (\n    <FormProvider>\n          {posts.map((post, key) => {\n\n        })}\n        \n      <Router />\n      \n    </FormProvider>\n  );\n  \n}\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}