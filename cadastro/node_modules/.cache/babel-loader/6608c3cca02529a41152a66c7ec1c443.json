{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anderson Lomba\\\\formulario-cadastro\\\\cadastro\\\\src\\\\contexts\\\\FormContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = {\n  currentStep: 0,\n  name: '',\n  level: 0,\n  email: '',\n  cadastro: ''\n}; //Context\n\nconst FormContext = /*#__PURE__*/createContext(undefined); //Reducer\n\nexport let FormActions;\n\n(function (FormActions) {\n  FormActions[FormActions[\"setCurrentStep\"] = 0] = \"setCurrentStep\";\n  FormActions[FormActions[\"setName\"] = 1] = \"setName\";\n  FormActions[FormActions[\"setLevel\"] = 2] = \"setLevel\";\n  FormActions[FormActions[\"setEmail\"] = 3] = \"setEmail\";\n  FormActions[FormActions[\"setCadastro\"] = 4] = \"setCadastro\";\n})(FormActions || (FormActions = {}));\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case FormActions.setCurrentStep:\n      return { ...state,\n        currentStep: action.payload\n      };\n\n    case FormActions.setName:\n      return { ...state,\n        name: action.payload\n      };\n\n    case FormActions.setLevel:\n      return { ...state,\n        level: action.payload\n      };\n\n    case FormActions.setEmail:\n      return { ...state,\n        email: action.payload\n      };\n\n    case FormActions.setCadastro:\n      return { ...state,\n        cadastro: action.payload\n      };\n\n    default:\n      return state;\n  }\n}; // Provider\n\n\nexport const FormProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(formReducer, initialData);\n  const value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 8\n  }, this);\n}; // Context Hook\n\n_s(FormProvider, \"OzyAvTfXSRYZ7bGVvSPAuX8UhkU=\");\n\n_c = FormProvider;\nexport const useForm = () => {\n  _s2();\n\n  const context = useContext(FormContext);\n\n  if (context === undefined) {\n    throw new Error('useForm precisa ser utilizado dentro do FormProvider');\n  }\n\n  return context;\n};\n\n_s2(useForm, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"FormProvider\");","map":{"version":3,"sources":["C:/Users/Anderson Lomba/formulario-cadastro/cadastro/src/contexts/FormContext.tsx"],"names":["createContext","useContext","useReducer","initialData","currentStep","name","level","email","cadastro","FormContext","undefined","FormActions","formReducer","state","action","type","setCurrentStep","payload","setName","setLevel","setEmail","setCadastro","FormProvider","children","dispatch","value","useForm","context","Error"],"mappings":";;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,UAA/C,QAAiE,OAAjE;;AAqBA,MAAMC,WAAkB,GAAG;AACvBC,EAAAA,WAAW,EAAE,CADU;AAEvBC,EAAAA,IAAI,EAAE,EAFiB;AAGvBC,EAAAA,KAAK,EAAC,CAHiB;AAIvBC,EAAAA,KAAK,EAAE,EAJgB;AAKvBC,EAAAA,QAAQ,EAAE;AALa,CAA3B,C,CAQA;;AACA,MAAMC,WAAW,gBAAGT,aAAa,CAA0BU,SAA1B,CAAjC,C,CAEA;;AACA,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W,CAAAA,W;AAAAA,EAAAA,W,CAAAA,W;AAAAA,EAAAA,W,CAAAA,W;AAAAA,EAAAA,W,CAAAA,W;AAAAA,EAAAA,W,CAAAA,W;GAAAA,W,KAAAA,W;;AAOZ,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAeC,MAAf,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,WAAW,CAACK,cAAjB;AACI,aAAM,EAAC,GAAGH,KAAJ;AAAWT,QAAAA,WAAW,EAAEU,MAAM,CAACG;AAA/B,OAAN;;AACJ,SAAKN,WAAW,CAACO,OAAjB;AACI,aAAM,EAAC,GAAGL,KAAJ;AAAWR,QAAAA,IAAI,EAAES,MAAM,CAACG;AAAxB,OAAN;;AACJ,SAAKN,WAAW,CAACQ,QAAjB;AACI,aAAM,EAAC,GAAGN,KAAJ;AAAWP,QAAAA,KAAK,EAAEQ,MAAM,CAACG;AAAzB,OAAN;;AACJ,SAAKN,WAAW,CAACS,QAAjB;AACI,aAAM,EAAC,GAAGP,KAAJ;AAAWN,QAAAA,KAAK,EAAEO,MAAM,CAACG;AAAzB,OAAN;;AACJ,SAAKN,WAAW,CAACU,WAAjB;AACI,aAAM,EAAC,GAAGR,KAAJ;AAAWL,QAAAA,QAAQ,EAAEM,MAAM,CAACG;AAA5B,OAAN;;AACJ;AACI,aAAOJ,KAAP;AAZR;AAcH,CAfD,C,CAiBA;;;AACA,OAAO,MAAMS,YAAY,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAACC,IAAAA;AAAD,GAAmC;AAC5D,QAAM,CAAEV,KAAF,EAASW,QAAT,IAAqBtB,UAAU,CAACU,WAAD,EAAcT,WAAd,CAArC;AACA,QAAMsB,KAAK,GAAG;AAAEZ,IAAAA,KAAF;AAASW,IAAAA;AAAT,GAAd;AACA,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,KAA7B;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADH;AAKH,CARM,C,CAUP;;GAVaD,Y;;KAAAA,Y;AAWb,OAAO,MAAMI,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAG1B,UAAU,CAACQ,WAAD,CAA1B;;AACA,MAAGkB,OAAO,KAAKjB,SAAf,EAA0B;AACxB,UAAM,IAAIkB,KAAJ,CAAU,sDAAV,CAAN;AACD;;AACD,SAAOD,OAAP;AACH,CANM;;IAAMD,O","sourcesContent":["import { createContext, ReactNode, useContext, useReducer } from 'react';\r\n\r\ntype State = {\r\n    currentStep: number;\r\n    name: string;\r\n    level: 0 | 1;\r\n    email: string;\r\n    cadastro: string;\r\n}\r\ntype Action = {\r\n    type: FormActions;\r\n    payload: any;\r\n};\r\ntype ContextType = {\r\n    state: State;\r\n    dispatch: (action: Action) => void;\r\n}\r\ntype FormProviderProps = {\r\n    children: ReactNode\r\n};\r\n\r\nconst initialData: State = {\r\n    currentStep: 0,\r\n    name: '',\r\n    level:0,\r\n    email: '',\r\n    cadastro: ''\r\n}\r\n\r\n//Context\r\nconst FormContext = createContext<ContextType | undefined>(undefined);\r\n\r\n//Reducer\r\nexport enum FormActions {\r\n    setCurrentStep,\r\n    setName,\r\n    setLevel,\r\n    setEmail,\r\n    setCadastro\r\n}\r\nconst formReducer = (state: State, action: Action) => {\r\n    switch(action.type) {\r\n        case FormActions.setCurrentStep:\r\n            return{...state, currentStep: action.payload};\r\n        case FormActions.setName:\r\n            return{...state, name: action.payload};\r\n        case FormActions.setLevel:\r\n            return{...state, level: action.payload};\r\n        case FormActions.setEmail:\r\n            return{...state, email: action.payload};\r\n        case FormActions.setCadastro:\r\n            return{...state, cadastro: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Provider\r\nexport const FormProvider = ({children} : FormProviderProps) => {\r\n    const [ state, dispatch] = useReducer(formReducer, initialData);\r\n    const value = { state, dispatch};\r\n    return(\r\n       <FormContext.Provider value={value}>\r\n           {children}\r\n       </FormContext.Provider>\r\n   );\r\n}\r\n\r\n// Context Hook\r\nexport const useForm = () => {\r\n    const context = useContext(FormContext);\r\n    if(context === undefined) {\r\n      throw new Error('useForm precisa ser utilizado dentro do FormProvider');\r\n    }\r\n    return context;\r\n}"]},"metadata":{},"sourceType":"module"}