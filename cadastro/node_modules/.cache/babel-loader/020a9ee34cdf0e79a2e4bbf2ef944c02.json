{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anderson Lomba\\\\formulario-cadastro\\\\cadastro\\\\src\\\\pages\\\\FormStep3\\\\index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { useHistory, Link } from 'react-router-dom';\nimport * as C from './styles';\nimport { useForm, FormActions } from '../../contexts/FormContext';\nimport { Theme } from '../../components/Theme';\nimport { useEffect, useState } from 'react';\nimport React from 'react'; //import { Formik, Field, Form, ErrorMessage} from 'formik';\n\nimport './App.css'; //import schema from './schema';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormStep3 = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const history = useHistory();\n  const {\n    state,\n    dispatch\n  } = useForm();\n  useEffect(() => {\n    if (state.name === '') {\n      history.push('/');\n    } else {\n      dispatch({\n        type: FormActions.setCurrentStep,\n        payload: 3\n      });\n    }\n  }, []);\n\n  const handleNextStep = () => {\n    if (state.email !== '' && state.github !== '') {\n      console.log(state);\n    } else {\n      alert(\"Preencha os dados\");\n    }\n  };\n\n  const handleEmailChange = e => {\n    dispatch({\n      type: FormActions.setEmail,\n      payload: e.target.value\n    });\n  };\n\n  const handleGithubChange = e => {\n    dispatch({\n      type: FormActions.setGithub,\n      payload: e.target.value\n    });\n  };\n\n  function App() {\n    _s();\n\n    const [values, setValues] = useState({\n      Email: '',\n      github: ''\n    });\n\n    function onChange(ev) {\n      setValues({ ...values,\n        [ev.target.email]: ev.target.value\n      });\n    }\n  }\n\n  _s(App, \"9VpzuEXlrCfeDfPKRMT2947smdM=\");\n\n  /*#__PURE__*/\n  _jsxDEV(Theme, {\n    children: /*#__PURE__*/_jsxDEV(C.Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Passo 3/3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Bacana \", state.name, \", onde achamos voc\\xEA?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Preencha com seus contatos para conseguirmos entrar em contato.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Qual seu e-mail?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: state.email,\n          onChange: handleEmailChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          mail: \"Email\",\n          type: \"text\",\n          value: values.Email,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Qual seu Github?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: state.github,\n          onChange: handleGithubChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          github: \"github\",\n          type: \"text\",\n          value: values.github,\n          onChange: onchange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/step4\",\n        className: \"backButton\",\n        children: \"Finalizar Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(FormStep3, \"Py15rdePqpQdZgGaZcOyGngoXxM=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = FormStep3;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormStep3\");","map":{"version":3,"sources":["C:/Users/Anderson Lomba/formulario-cadastro/cadastro/src/pages/FormStep3/index.tsx"],"names":["useHistory","Link","C","useForm","FormActions","Theme","useEffect","useState","React","FormStep3","history","state","dispatch","name","push","type","setCurrentStep","payload","handleNextStep","email","github","console","log","alert","handleEmailChange","e","setEmail","target","value","handleGithubChange","setGithub","App","values","setValues","Email","onChange","ev","onchange"],"mappings":"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","sourcesContent":["import { useHistory, Link } from 'react-router-dom';\nimport * as C from './styles';\nimport { useForm, FormActions } from '../../contexts/FormContext';\nimport { Theme } from '../../components/Theme';\nimport { ChangeEvent, useEffect, useState} from 'react';\nimport React from 'react';\n//import { Formik, Field, Form, ErrorMessage} from 'formik';\nimport './App.css';\n//import schema from './schema';\n\n\nexport const FormStep3 = () => {\n    const history = useHistory();\n    const { state, dispatch } = useForm();\n  \n    useEffect(() => {\n        if(state.name === '') {\n            history.push('/');\n        } else {\n            dispatch({\n                type: FormActions.setCurrentStep,\n                payload: 3\n            });\n        }\n    }, []);\n\n    const handleNextStep = () => {\n        if(state.email !== '' && state.github !== '') {\n            console.log(state);\n        } else {\n            alert(\"Preencha os dados\");\n        }\n    }\n\n    const handleEmailChange = (e: ChangeEvent<HTMLInputElement>) => {\n        dispatch({\n            type: FormActions.setEmail,\n            payload: e.target.value\n        });\n    }\n    const handleGithubChange = (e: ChangeEvent<HTMLInputElement>) => {\n        dispatch({\n            type: FormActions.setGithub,\n            payload: e.target.value\n        });\n    }\n\n    function App(){\n        const[values,setValues]= useState({\n            Email: '',\n            github:''\n        });\n\n     function onChange(ev){\n         setValues({\n             ...values,\n             [ev.target.email]: ev.target.value,\n         })\n     }\n\n    }\n        \n        <Theme >\n            <C.Container >\n                <p>Passo 3/3</p>\n                <h1>Bacana {state.name}, onde achamos vocÃª?</h1>\n                <p>Preencha com seus contatos para conseguirmos entrar em contato.</p>\n\n                <hr/>\n\n                <label>\n                    Qual seu e-mail?\n                    <input\n                        type=\"email\"\n                        value={state.email}\n                        onChange={handleEmailChange}\n                    />\n                    <input mail=\"Email\" type=\"text\" value={values.Email} onChange={onChange}/>\n                        \n                </label>\n\n                <label>\n                    Qual seu Github?\n                    <input\n                        type=\"url\"\n                        value={state.github}\n                        onChange={handleGithubChange}\n                       \n                    />\n                    <input github=\"github\" type=\"text\" value={values.github} onChange={onchange}/>\n                     \n                </label>             \n                \n                <Link to=\"/step4\" className=\"backButton\">Finalizar Cadastro</Link>\n             \n                \n            </C.Container>\n        </Theme>\n          \n        }\n\n"]},"metadata":{},"sourceType":"module"}